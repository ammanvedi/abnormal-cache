// Generated by purs bundle 0.13.8
var PS = {};
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];                    
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var Data_Function = $PS["Data.Function"];
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function(exports) {
  "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };                                                                                                 

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  //------------------------------------------------------------------------------
  // Transformations -------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.reverse = function (l) {
    return l.slice().reverse();
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortImpl = function (f) {
    return function (l) {
      return l.slice().sort(function (x, y) {
        return f(x)(y);
      });
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };                            
  exports.eqIntImpl = refEq;
  exports.eqNumberImpl = refEq;
  exports.eqCharImpl = refEq;
  exports.eqStringImpl = refEq;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqString = new Eq($foreign.eqStringImpl);
  var eqNumber = new Eq($foreign.eqNumberImpl);
  var eqInt = new Eq($foreign.eqIntImpl);
  var eqChar = new Eq($foreign.eqCharImpl);
  var eq = function (dict) {
      return dict.eq;
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["eqInt"] = eqInt;
  exports["eqNumber"] = eqNumber;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];              
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };                                                                                             
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["functorArray"] = functorArray;
})(PS);
(function(exports) {
  "use strict";

  var unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };                                         
  exports.ordIntImpl = unsafeCompareImpl;
  exports.ordNumberImpl = unsafeCompareImpl;
  exports.ordStringImpl = unsafeCompareImpl;
  exports.ordCharImpl = unsafeCompareImpl;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];
  var Data_Eq = $PS["Data.Eq"];                    
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  var eqOrdering = new Data_Eq.Eq(function (v) {
      return function (v1) {
          if (v instanceof LT && v1 instanceof LT) {
              return true;
          };
          if (v instanceof GT && v1 instanceof GT) {
              return true;
          };
          if (v instanceof EQ && v1 instanceof EQ) {
              return true;
          };
          return false;
      };
  });
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["eqOrdering"] = eqOrdering;
})(PS);
(function(exports) {
  "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };

  exports.numSub = function (n1) {
    return function (n2) {
      return n1 - n2;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };

  exports.numAdd = function (n1) {
    return function (n2) {
      return n1 + n2;
    };
  };

  exports.numMul = function (n1) {
    return function (n2) {
      return n1 * n2;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Semiring"] = $PS["Data.Semiring"] || {};
  var exports = $PS["Data.Semiring"];
  var $foreign = $PS["Data.Semiring"];
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var zero = function (dict) {
      return dict.zero;
  }; 
  var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var add = function (dict) {
      return dict.add;
  };
  exports["add"] = add;
  exports["zero"] = zero;
  exports["semiringInt"] = semiringInt;
  exports["semiringNumber"] = semiringNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Ring"] = $PS["Data.Ring"] || {};
  var exports = $PS["Data.Ring"];
  var $foreign = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Ring = function (Semiring0, sub) {
      this.Semiring0 = Semiring0;
      this.sub = sub;
  };
  var sub = function (dict) {
      return dict.sub;
  };
  var ringNumber = new Ring(function () {
      return Data_Semiring.semiringNumber;
  }, $foreign.numSub);
  var ringInt = new Ring(function () {
      return Data_Semiring.semiringInt;
  }, $foreign.intSub);
  var negate = function (dictRing) {
      return function (a) {
          return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
      };
  };
  exports["negate"] = negate;
  exports["ringInt"] = ringInt;
  exports["ringNumber"] = ringNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  }; 
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordNumber = new Ord(function () {
      return Data_Eq.eqNumber;
  }, $foreign.ordNumberImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordChar = new Ord(function () {
      return Data_Eq.eqChar;
  }, $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var compare = function (dict) {
      return dict.compare;
  };
  var greaterThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.GT) {
                  return true;
              };
              return false;
          };
      };
  };
  var greaterThanOrEq = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.LT) {
                  return false;
              };
              return true;
          };
      };
  };
  var abs = function (dictOrd) {
      return function (dictRing) {
          return function (x) {
              var $53 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
              if ($53) {
                  return x;
              };
              return Data_Ring.negate(dictRing)(x);
          };
      };
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["greaterThan"] = greaterThan;
  exports["abs"] = abs;
  exports["ordInt"] = ordInt;
  exports["ordNumber"] = ordNumber;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];        
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [ v.constructor.name ]);
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  var ordMaybe = function (dictOrd) {
      return new Data_Ord.Ord(function () {
          return eqMaybe(dictOrd.Eq0());
      }, function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Nothing) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Nothing) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 194, column 1 - line 194, column 51): " + [ x.constructor.name, y.constructor.name ]);
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["fromMaybe"] = fromMaybe;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["ordMaybe"] = ordMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["mempty"] = mempty;
})(PS);
(function(exports) {
  "use strict";

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupArray"] = semigroupArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var maximumBy = function (dictFoldable) {
      return function (cmp) {
          var max$prime = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Nothing) {
                      return new Data_Maybe.Just(v1);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return new Data_Maybe.Just((function () {
                          var $116 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);
                          if ($116) {
                              return v.value0;
                          };
                          return v1;
                      })());
                  };
                  throw new Error("Failed pattern match at Data.Foldable (line 389, column 3 - line 389, column 27): " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
          return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
      };
  };
  var maximum = function (dictOrd) {
      return function (dictFoldable) {
          return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
      };
  };
  var sum = function (dictFoldable) {
      return function (dictSemiring) {
          return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
      };
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["sum"] = sum;
  exports["maximum"] = maximum;
  exports["foldableArray"] = foldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];                         
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (v) {
      return v.value1;
  };                                                                                                    
  var fst = function (v) {
      return v.value0;
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Tuple = $PS["Data.Tuple"];
  var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
  var sortBy = function (comp) {
      return function (xs) {
          var comp$prime = function (x) {
              return function (y) {
                  var v = comp(x)(y);
                  if (v instanceof Data_Ordering.GT) {
                      return 1;
                  };
                  if (v instanceof Data_Ordering.EQ) {
                      return 0;
                  };
                  if (v instanceof Data_Ordering.LT) {
                      return -1 | 0;
                  };
                  throw new Error("Failed pattern match at Data.Array (line 702, column 15 - line 705, column 13): " + [ v.constructor.name ]);
              };
          };
          return $foreign.sortImpl(comp$prime)(xs);
      };
  };
  var sort = function (dictOrd) {
      return function (xs) {
          return sortBy(Data_Ord.compare(dictOrd))(xs);
      };
  };
  var mapWithIndex = function (f) {
      return function (xs) {
          return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
      };
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1 | 0);
  };
  var head = function (xs) {
      return index(xs)(0);
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  exports["fromFoldable"] = fromFoldable;
  exports["head"] = head;
  exports["last"] = last;
  exports["index"] = index;
  exports["mapWithIndex"] = mapWithIndex;
  exports["sort"] = sort;
  exports["zip"] = zip;
  exports["range"] = $foreign.range;
  exports["length"] = $foreign.length;
  exports["reverse"] = $foreign.reverse;
  exports["filter"] = $foreign.filter;
  exports["slice"] = $foreign.slice;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function(exports) {
  "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;

  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Bounded"] = $PS["Data.Bounded"] || {};
  var exports = $PS["Data.Bounded"];
  var $foreign = $PS["Data.Bounded"];
  var Data_Ord = $PS["Data.Ord"];                  
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                            
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var boundedChar = new Bounded(function () {
      return Data_Ord.ordChar;
  }, $foreign.bottomChar, $foreign.topChar);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {};
  var exports = $PS["Data.CommutativeRing"];
  var Data_Ring = $PS["Data.Ring"];
  var CommutativeRing = function (Ring0) {
      this.Ring0 = Ring0;
  }; 
  var commutativeRingInt = new CommutativeRing(function () {
      return Data_Ring.ringInt;
  });
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS);
(function(exports) {
  "use strict";

  var createDate = function (y, m, d) {
    var date = new Date(Date.UTC(y, m, d));
    if (y >= 0 && y < 100) {
      date.setUTCFullYear(y);
    }
    return date;
  };

  exports.canonicalDateImpl = function (ctor, y, m, d) {
    var date = createDate(y, m - 1, d);
    return ctor(date.getUTCFullYear())(date.getUTCMonth() + 1)(date.getUTCDate());
  };

  exports.calcWeekday = function (y, m, d) {
    return createDate(y, m - 1, d).getUTCDay();
  };

  exports.calcDiff = function (y1, m1, d1, y2, m2, d2) {
    var dt1 = createDate(y1, m1 - 1, d1);
    var dt2 = createDate(y2, m2 - 1, d2);
    return dt1.getTime() - dt2.getTime();
  };
})(PS["Data.Date"] = PS["Data.Date"] || {});
(function(exports) {
  "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Enum"] = $PS["Data.Enum"] || {};
  var exports = $PS["Data.Enum"];
  var $foreign = $PS["Data.Enum"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Enum = function (Ord0, pred, succ) {
      this.Ord0 = Ord0;
      this.pred = pred;
      this.succ = succ;
  };
  var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
      this.Bounded0 = Bounded0;
      this.Enum1 = Enum1;
      this.cardinality = cardinality;
      this.fromEnum = fromEnum;
      this.toEnum = toEnum;
  };
  var toEnum = function (dict) {
      return dict.toEnum;
  };
  var succ = function (dict) {
      return dict.succ;
  }; 
  var pred = function (dict) {
      return dict.pred;
  };              
  var fromEnum = function (dict) {
      return dict.fromEnum;
  };
  var toEnumWithDefaults = function (dictBoundedEnum) {
      return function (low) {
          return function (high) {
              return function (x) {
                  var v = toEnum(dictBoundedEnum)(x);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                      if ($54) {
                          return low;
                      };
                      return high;
                  };
                  throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var defaultSucc = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) + 1 | 0);
          };
      };
  };
  var defaultPred = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) - 1 | 0);
          };
      };
  };
  var charToEnum = function (v) {
      if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
          return new Data_Maybe.Just($foreign.fromCharCode(v));
      };
      return Data_Maybe.Nothing.value;
  };
  var enumChar = new Enum(function () {
      return Data_Ord.ordChar;
  }, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));
  var boundedEnumChar = new BoundedEnum(function () {
      return Data_Bounded.boundedChar;
  }, function () {
      return enumChar;
  }, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
  exports["Enum"] = Enum;
  exports["succ"] = succ;
  exports["pred"] = pred;
  exports["BoundedEnum"] = BoundedEnum;
  exports["toEnum"] = toEnum;
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Date.Component"] = $PS["Data.Date.Component"] || {};
  var exports = $PS["Data.Date.Component"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Monday = (function () {
      function Monday() {

      };
      Monday.value = new Monday();
      return Monday;
  })();
  var Tuesday = (function () {
      function Tuesday() {

      };
      Tuesday.value = new Tuesday();
      return Tuesday;
  })();
  var Wednesday = (function () {
      function Wednesday() {

      };
      Wednesday.value = new Wednesday();
      return Wednesday;
  })();
  var Thursday = (function () {
      function Thursday() {

      };
      Thursday.value = new Thursday();
      return Thursday;
  })();
  var Friday = (function () {
      function Friday() {

      };
      Friday.value = new Friday();
      return Friday;
  })();
  var Saturday = (function () {
      function Saturday() {

      };
      Saturday.value = new Saturday();
      return Saturday;
  })();
  var Sunday = (function () {
      function Sunday() {

      };
      Sunday.value = new Sunday();
      return Sunday;
  })();
  var January = (function () {
      function January() {

      };
      January.value = new January();
      return January;
  })();
  var February = (function () {
      function February() {

      };
      February.value = new February();
      return February;
  })();
  var March = (function () {
      function March() {

      };
      March.value = new March();
      return March;
  })();
  var April = (function () {
      function April() {

      };
      April.value = new April();
      return April;
  })();
  var May = (function () {
      function May() {

      };
      May.value = new May();
      return May;
  })();
  var June = (function () {
      function June() {

      };
      June.value = new June();
      return June;
  })();
  var July = (function () {
      function July() {

      };
      July.value = new July();
      return July;
  })();
  var August = (function () {
      function August() {

      };
      August.value = new August();
      return August;
  })();
  var September = (function () {
      function September() {

      };
      September.value = new September();
      return September;
  })();
  var October = (function () {
      function October() {

      };
      October.value = new October();
      return October;
  })();
  var November = (function () {
      function November() {

      };
      November.value = new November();
      return November;
  })();
  var December = (function () {
      function December() {

      };
      December.value = new December();
      return December;
  })();
  var ordYear = Data_Ord.ordInt;
  var ordDay = Data_Ord.ordInt;
  var eqYear = Data_Eq.eqInt;
  var eqWeekday = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Monday && y instanceof Monday) {
              return true;
          };
          if (x instanceof Tuesday && y instanceof Tuesday) {
              return true;
          };
          if (x instanceof Wednesday && y instanceof Wednesday) {
              return true;
          };
          if (x instanceof Thursday && y instanceof Thursday) {
              return true;
          };
          if (x instanceof Friday && y instanceof Friday) {
              return true;
          };
          if (x instanceof Saturday && y instanceof Saturday) {
              return true;
          };
          if (x instanceof Sunday && y instanceof Sunday) {
              return true;
          };
          return false;
      };
  });
  var ordWeekday = new Data_Ord.Ord(function () {
      return eqWeekday;
  }, function (x) {
      return function (y) {
          if (x instanceof Monday && y instanceof Monday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Monday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Monday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Tuesday && y instanceof Tuesday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Tuesday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Tuesday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Wednesday && y instanceof Wednesday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Wednesday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Wednesday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Thursday && y instanceof Thursday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Thursday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Thursday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Friday && y instanceof Friday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Friday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Friday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Saturday && y instanceof Saturday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Saturday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Saturday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Sunday && y instanceof Sunday) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Data.Date.Component (line 154, column 1 - line 154, column 42): " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var eqMonth = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof January && y instanceof January) {
              return true;
          };
          if (x instanceof February && y instanceof February) {
              return true;
          };
          if (x instanceof March && y instanceof March) {
              return true;
          };
          if (x instanceof April && y instanceof April) {
              return true;
          };
          if (x instanceof May && y instanceof May) {
              return true;
          };
          if (x instanceof June && y instanceof June) {
              return true;
          };
          if (x instanceof July && y instanceof July) {
              return true;
          };
          if (x instanceof August && y instanceof August) {
              return true;
          };
          if (x instanceof September && y instanceof September) {
              return true;
          };
          if (x instanceof October && y instanceof October) {
              return true;
          };
          if (x instanceof November && y instanceof November) {
              return true;
          };
          if (x instanceof December && y instanceof December) {
              return true;
          };
          return false;
      };
  });
  var ordMonth = new Data_Ord.Ord(function () {
      return eqMonth;
  }, function (x) {
      return function (y) {
          if (x instanceof January && y instanceof January) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof January) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof January) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof February && y instanceof February) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof February) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof February) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof March && y instanceof March) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof March) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof March) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof April && y instanceof April) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof April) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof April) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof May && y instanceof May) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof May) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof May) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof June && y instanceof June) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof June) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof June) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof July && y instanceof July) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof July) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof July) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof August && y instanceof August) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof August) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof August) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof September && y instanceof September) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof September) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof September) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof October && y instanceof October) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof October) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof October) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof November && y instanceof November) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof November) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof November) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof December && y instanceof December) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Data.Date.Component (line 61, column 1 - line 61, column 38): " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var eqDay = Data_Eq.eqInt;
  var boundedYear = new Data_Bounded.Bounded(function () {
      return ordYear;
  }, -271820 | 0, 275759);
  var boundedWeekday = new Data_Bounded.Bounded(function () {
      return ordWeekday;
  }, Monday.value, Sunday.value);
  var boundedMonth = new Data_Bounded.Bounded(function () {
      return ordMonth;
  }, January.value, December.value);
  var boundedEnumYear = new Data_Enum.BoundedEnum(function () {
      return boundedYear;
  }, function () {
      return enumYear;
  }, 547580, function (v) {
      return v;
  }, function (n) {
      if (n >= (-271820 | 0) && n <= 275759) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 35, column 1 - line 40, column 24): " + [ n.constructor.name ]);
  });
  var enumYear = new Data_Enum.Enum(function () {
      return ordYear;
  }, (function () {
      var $46 = Data_Enum.toEnum(boundedEnumYear);
      var $47 = Data_Enum.fromEnum(boundedEnumYear);
      return function ($48) {
          return $46((function (v) {
              return v - 1 | 0;
          })($47($48)));
      };
  })(), (function () {
      var $49 = Data_Enum.toEnum(boundedEnumYear);
      var $50 = Data_Enum.fromEnum(boundedEnumYear);
      return function ($51) {
          return $49((function (v) {
              return v + 1 | 0;
          })($50($51)));
      };
  })());
  var boundedEnumWeekday = new Data_Enum.BoundedEnum(function () {
      return boundedWeekday;
  }, function () {
      return enumWeekday;
  }, 7, function (v) {
      if (v instanceof Monday) {
          return 1;
      };
      if (v instanceof Tuesday) {
          return 2;
      };
      if (v instanceof Wednesday) {
          return 3;
      };
      if (v instanceof Thursday) {
          return 4;
      };
      if (v instanceof Friday) {
          return 5;
      };
      if (v instanceof Saturday) {
          return 6;
      };
      if (v instanceof Sunday) {
          return 7;
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 175, column 14 - line 182, column 16): " + [ v.constructor.name ]);
  }, function (v) {
      if (v === 1) {
          return new Data_Maybe.Just(Monday.value);
      };
      if (v === 2) {
          return new Data_Maybe.Just(Tuesday.value);
      };
      if (v === 3) {
          return new Data_Maybe.Just(Wednesday.value);
      };
      if (v === 4) {
          return new Data_Maybe.Just(Thursday.value);
      };
      if (v === 5) {
          return new Data_Maybe.Just(Friday.value);
      };
      if (v === 6) {
          return new Data_Maybe.Just(Saturday.value);
      };
      if (v === 7) {
          return new Data_Maybe.Just(Sunday.value);
      };
      return Data_Maybe.Nothing.value;
  });
  var enumWeekday = new Data_Enum.Enum(function () {
      return ordWeekday;
  }, (function () {
      var $52 = Data_Enum.toEnum(boundedEnumWeekday);
      var $53 = Data_Enum.fromEnum(boundedEnumWeekday);
      return function ($54) {
          return $52((function (v) {
              return v - 1 | 0;
          })($53($54)));
      };
  })(), (function () {
      var $55 = Data_Enum.toEnum(boundedEnumWeekday);
      var $56 = Data_Enum.fromEnum(boundedEnumWeekday);
      return function ($57) {
          return $55((function (v) {
              return v + 1 | 0;
          })($56($57)));
      };
  })());
  var boundedEnumMonth = new Data_Enum.BoundedEnum(function () {
      return boundedMonth;
  }, function () {
      return enumMonth;
  }, 12, function (v) {
      if (v instanceof January) {
          return 1;
      };
      if (v instanceof February) {
          return 2;
      };
      if (v instanceof March) {
          return 3;
      };
      if (v instanceof April) {
          return 4;
      };
      if (v instanceof May) {
          return 5;
      };
      if (v instanceof June) {
          return 6;
      };
      if (v instanceof July) {
          return 7;
      };
      if (v instanceof August) {
          return 8;
      };
      if (v instanceof September) {
          return 9;
      };
      if (v instanceof October) {
          return 10;
      };
      if (v instanceof November) {
          return 11;
      };
      if (v instanceof December) {
          return 12;
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 87, column 14 - line 99, column 19): " + [ v.constructor.name ]);
  }, function (v) {
      if (v === 1) {
          return new Data_Maybe.Just(January.value);
      };
      if (v === 2) {
          return new Data_Maybe.Just(February.value);
      };
      if (v === 3) {
          return new Data_Maybe.Just(March.value);
      };
      if (v === 4) {
          return new Data_Maybe.Just(April.value);
      };
      if (v === 5) {
          return new Data_Maybe.Just(May.value);
      };
      if (v === 6) {
          return new Data_Maybe.Just(June.value);
      };
      if (v === 7) {
          return new Data_Maybe.Just(July.value);
      };
      if (v === 8) {
          return new Data_Maybe.Just(August.value);
      };
      if (v === 9) {
          return new Data_Maybe.Just(September.value);
      };
      if (v === 10) {
          return new Data_Maybe.Just(October.value);
      };
      if (v === 11) {
          return new Data_Maybe.Just(November.value);
      };
      if (v === 12) {
          return new Data_Maybe.Just(December.value);
      };
      return Data_Maybe.Nothing.value;
  });
  var enumMonth = new Data_Enum.Enum(function () {
      return ordMonth;
  }, (function () {
      var $58 = Data_Enum.toEnum(boundedEnumMonth);
      var $59 = Data_Enum.fromEnum(boundedEnumMonth);
      return function ($60) {
          return $58((function (v) {
              return v - 1 | 0;
          })($59($60)));
      };
  })(), (function () {
      var $61 = Data_Enum.toEnum(boundedEnumMonth);
      var $62 = Data_Enum.fromEnum(boundedEnumMonth);
      return function ($63) {
          return $61((function (v) {
              return v + 1 | 0;
          })($62($63)));
      };
  })());
  var boundedDay = new Data_Bounded.Bounded(function () {
      return ordDay;
  }, 1, 31);
  var boundedEnumDay = new Data_Enum.BoundedEnum(function () {
      return boundedDay;
  }, function () {
      return enumDay;
  }, 31, function (v) {
      return v;
  }, function (n) {
      if (n >= 1 && n <= 31) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 133, column 1 - line 138, column 23): " + [ n.constructor.name ]);
  });
  var enumDay = new Data_Enum.Enum(function () {
      return ordDay;
  }, (function () {
      var $64 = Data_Enum.toEnum(boundedEnumDay);
      var $65 = Data_Enum.fromEnum(boundedEnumDay);
      return function ($66) {
          return $64((function (v) {
              return v - 1 | 0;
          })($65($66)));
      };
  })(), (function () {
      var $67 = Data_Enum.toEnum(boundedEnumDay);
      var $68 = Data_Enum.fromEnum(boundedEnumDay);
      return function ($69) {
          return $67((function (v) {
              return v + 1 | 0;
          })($68($69)));
      };
  })());
  exports["January"] = January;
  exports["February"] = February;
  exports["March"] = March;
  exports["April"] = April;
  exports["May"] = May;
  exports["June"] = June;
  exports["July"] = July;
  exports["August"] = August;
  exports["September"] = September;
  exports["October"] = October;
  exports["November"] = November;
  exports["December"] = December;
  exports["Monday"] = Monday;
  exports["Tuesday"] = Tuesday;
  exports["Wednesday"] = Wednesday;
  exports["Thursday"] = Thursday;
  exports["Friday"] = Friday;
  exports["Saturday"] = Saturday;
  exports["Sunday"] = Sunday;
  exports["eqYear"] = eqYear;
  exports["ordYear"] = ordYear;
  exports["enumYear"] = enumYear;
  exports["boundedEnumYear"] = boundedEnumYear;
  exports["eqMonth"] = eqMonth;
  exports["ordMonth"] = ordMonth;
  exports["enumMonth"] = enumMonth;
  exports["boundedEnumMonth"] = boundedEnumMonth;
  exports["eqDay"] = eqDay;
  exports["ordDay"] = ordDay;
  exports["boundedDay"] = boundedDay;
  exports["enumDay"] = enumDay;
  exports["boundedEnumDay"] = boundedEnumDay;
  exports["eqWeekday"] = eqWeekday;
  exports["boundedEnumWeekday"] = boundedEnumWeekday;
})(PS);
(function(exports) {
  "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {};
  var exports = $PS["Data.EuclideanRing"];
  var $foreign = $PS["Data.EuclideanRing"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];  
  var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
      this.CommutativeRing0 = CommutativeRing0;
      this.degree = degree;
      this.div = div;
      this.mod = mod;
  };
  var mod = function (dict) {
      return dict.mod;
  }; 
  var euclideanRingInt = new EuclideanRing(function () {
      return Data_CommutativeRing.commutativeRingInt;
  }, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
  var div = function (dict) {
      return dict.div;
  };
  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS);
(function(exports) {
  "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };

  exports.toStringAs = function (radix) {
    return function (i) {
      return i.toString(radix);
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* globals exports */
  "use strict";         

  exports.infinity = Infinity;
})(PS["Global"] = PS["Global"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Global"] = $PS["Global"] || {};
  var exports = $PS["Global"];
  var $foreign = $PS["Global"];
  exports["infinity"] = $foreign.infinity;
})(PS);
(function(exports) {
  "use strict";          

  exports.floor = Math.floor;

  exports.pow = function (n) {
    return function (p) {
      return Math.pow(n, p);
    };
  };
})(PS["Math"] = PS["Math"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Math"] = $PS["Math"] || {};
  var exports = $PS["Math"];
  var $foreign = $PS["Math"];
  exports["floor"] = $foreign.floor;
  exports["pow"] = $foreign.pow;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Global = $PS["Global"];
  var $$Math = $PS["Math"];         
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x === Global.infinity) {
          return 0;
      };
      if (x === -Global.infinity) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [ x.constructor.name ]);
  };
  var floor = function ($24) {
      return unsafeClamp($$Math.floor($24));
  };                        
  var binary = 2;
  exports["fromNumber"] = fromNumber;
  exports["floor"] = floor;
  exports["binary"] = binary;
  exports["toNumber"] = $foreign.toNumber;
  exports["toStringAs"] = $foreign.toStringAs;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];                                   
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var over = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (v) {
              return function (f) {
                  var $90 = wrap(dictNewtype1);
                  var $91 = unwrap(dictNewtype);
                  return function ($92) {
                      return $90(f($91($92)));
                  };
              };
          };
      };
  };
  exports["unwrap"] = unwrap;
  exports["Newtype"] = Newtype;
  exports["over"] = over;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Time.Duration"] = $PS["Data.Time.Duration"] || {};
  var exports = $PS["Data.Time.Duration"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Milliseconds = function (x) {
      return x;
  };
  var Days = function (x) {
      return x;
  };
  var Duration = function (fromDuration, toDuration) {
      this.fromDuration = fromDuration;
      this.toDuration = toDuration;
  };
  var toDuration = function (dict) {
      return dict.toDuration;
  };          
  var newtypeMilliseconds = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Milliseconds);
  var newtypeDays = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Days);
  var durationDays = new Duration(Data_Newtype.over(newtypeDays)(newtypeMilliseconds)(Days)(function (v) {
      return v * 8.64e7;
  }), Data_Newtype.over(newtypeMilliseconds)(newtypeDays)(Milliseconds)(function (v) {
      return v / 8.64e7;
  }));
  exports["toDuration"] = toDuration;
  exports["Milliseconds"] = Milliseconds;
  exports["Days"] = Days;
  exports["newtypeDays"] = newtypeDays;
  exports["durationDays"] = durationDays;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Date"] = $PS["Data.Date"] || {};
  var exports = $PS["Data.Date"];
  var $foreign = $PS["Data.Date"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Time_Duration = $PS["Data.Time.Duration"];                
  var $$Date = (function () {
      function $$Date(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      $$Date.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new $$Date(value0, value1, value2);
              };
          };
      };
      return $$Date;
  })();
  var year = function (v) {
      return v.value0;
  };
  var weekday = function (v) {
      var n = $foreign.calcWeekday(v.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v.value1), v.value2);
      var $41 = n === 0;
      if ($41) {
          return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(7));
      };
      return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(n));
  }; 
  var month = function (v) {
      return v.value1;
  };
  var isLeapYear = function (y) {
      var y$prime = Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(y);
      return Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(y$prime)(4) === 0 && (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(y$prime)(400) === 0 || !(Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(y$prime)(100) === 0));
  };
  var lastDayOfMonth = function (y) {
      return function (m) {
          var unsafeDay = (function () {
              var $108 = Data_Maybe.fromJust();
              var $109 = Data_Enum.toEnum(Data_Date_Component.boundedEnumDay);
              return function ($110) {
                  return $108($109($110));
              };
          })();
          if (m instanceof Data_Date_Component.January) {
              return unsafeDay(31);
          };
          if (m instanceof Data_Date_Component.February) {
              if (isLeapYear(y)) {
                  return unsafeDay(29);
              };
              if (Data_Boolean.otherwise) {
                  return unsafeDay(28);
              };
          };
          if (m instanceof Data_Date_Component.March) {
              return unsafeDay(31);
          };
          if (m instanceof Data_Date_Component.April) {
              return unsafeDay(30);
          };
          if (m instanceof Data_Date_Component.May) {
              return unsafeDay(31);
          };
          if (m instanceof Data_Date_Component.June) {
              return unsafeDay(30);
          };
          if (m instanceof Data_Date_Component.July) {
              return unsafeDay(31);
          };
          if (m instanceof Data_Date_Component.August) {
              return unsafeDay(31);
          };
          if (m instanceof Data_Date_Component.September) {
              return unsafeDay(30);
          };
          if (m instanceof Data_Date_Component.October) {
              return unsafeDay(31);
          };
          if (m instanceof Data_Date_Component.November) {
              return unsafeDay(30);
          };
          if (m instanceof Data_Date_Component.December) {
              return unsafeDay(31);
          };
          throw new Error("Failed pattern match at Data.Date (line 127, column 22 - line 141, column 27): " + [ m.constructor.name ]);
      };
  };
  var eqDate = new Data_Eq.Eq(function (x) {
      return function (y) {
          return Data_Eq.eq(Data_Date_Component.eqYear)(x.value0)(y.value0) && Data_Eq.eq(Data_Date_Component.eqMonth)(x.value1)(y.value1) && Data_Eq.eq(Data_Date_Component.eqDay)(x.value2)(y.value2);
      };
  });
  var ordDate = new Data_Ord.Ord(function () {
      return eqDate;
  }, function (x) {
      return function (y) {
          var v = Data_Ord.compare(Data_Date_Component.ordYear)(x.value0)(y.value0);
          if (v instanceof Data_Ordering.LT) {
              return Data_Ordering.LT.value;
          };
          if (v instanceof Data_Ordering.GT) {
              return Data_Ordering.GT.value;
          };
          var v1 = Data_Ord.compare(Data_Date_Component.ordMonth)(x.value1)(y.value1);
          if (v1 instanceof Data_Ordering.LT) {
              return Data_Ordering.LT.value;
          };
          if (v1 instanceof Data_Ordering.GT) {
              return Data_Ordering.GT.value;
          };
          return Data_Ord.compare(Data_Date_Component.ordDay)(x.value2)(y.value2);
      };
  });
  var enumDate = new Data_Enum.Enum(function () {
      return ordDate;
  }, function (v) {
      var pm = Data_Enum.pred(Data_Date_Component.enumMonth)(v.value1);
      var pd = Data_Enum.pred(Data_Date_Component.enumDay)(v.value2);
      var y$prime = (function () {
          var $73 = Data_Maybe.isNothing(pd) && Data_Maybe.isNothing(pm);
          if ($73) {
              return Data_Enum.pred(Data_Date_Component.enumYear)(v.value0);
          };
          return new Data_Maybe.Just(v.value0);
      })();
      var m$prime = (function () {
          var $74 = Data_Maybe.isNothing(pd);
          if ($74) {
              return Data_Maybe.fromMaybe(Data_Date_Component.December.value)(pm);
          };
          return v.value1;
      })();
      var l = lastDayOfMonth(v.value0)(m$prime);
      var d$prime = (function () {
          var $75 = Data_Maybe.isNothing(pd);
          if ($75) {
              return new Data_Maybe.Just(l);
          };
          return pd;
      })();
      return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)($$Date.create)(y$prime))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(m$prime)))(d$prime);
  }, function (v) {
      var sm = Data_Enum.succ(Data_Date_Component.enumMonth)(v.value1);
      var l = lastDayOfMonth(v.value0)(v.value1);
      var sd = (function () {
          var v1 = Data_Enum.succ(Data_Date_Component.enumDay)(v.value2);
          var $80 = Data_Ord.greaterThan(Data_Maybe.ordMaybe(Data_Date_Component.ordDay))(v1)(new Data_Maybe.Just(l));
          if ($80) {
              return Data_Maybe.Nothing.value;
          };
          return v1;
      })();
      var m$prime = (function () {
          var $81 = Data_Maybe.isNothing(sd);
          if ($81) {
              return Data_Maybe.fromMaybe(Data_Date_Component.January.value)(sm);
          };
          return v.value1;
      })();
      var y$prime = (function () {
          var $82 = Data_Maybe.isNothing(sd) && Data_Maybe.isNothing(sm);
          if ($82) {
              return Data_Enum.succ(Data_Date_Component.enumYear)(v.value0);
          };
          return new Data_Maybe.Just(v.value0);
      })();
      var d$prime = (function () {
          var $83 = Data_Maybe.isNothing(sd);
          if ($83) {
              return Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(1);
          };
          return sd;
      })();
      return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)($$Date.create)(y$prime))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(m$prime)))(d$prime);
  });
  var diff = function (dictDuration) {
      return function (v) {
          return function (v1) {
              return Data_Time_Duration.toDuration(dictDuration)($foreign.calcDiff(v.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v.value1), v.value2, v1.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v1.value1), v1.value2));
          };
      };
  };
  var day = function (v) {
      return v.value2;
  };
  var canonicalDate = function (y) {
      return function (m) {
          return function (d) {
              var mkDate = function (y$prime) {
                  return function (m$prime) {
                      return function (d$prime) {
                          return new $$Date(y$prime, Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(m$prime)), d$prime);
                      };
                  };
              };
              return $foreign.canonicalDateImpl(mkDate, y, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(m), d);
          };
      };
  };                                                                                                                                                                                                                                                                                                                                                    
  var adjust = function (v) {
      return function (date) {
          var adj = function (v1) {
              return function (v2) {
                  if (v1 === 0) {
                      return new Data_Maybe.Just(v2);
                  };
                  var j = v1 + Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(v2.value2) | 0;
                  var low = j < 1;
                  var l = lastDayOfMonth(v2.value0)((function () {
                      if (low) {
                          return Data_Maybe.fromMaybe(Data_Date_Component.December.value)(Data_Enum.pred(Data_Date_Component.enumMonth)(v2.value1));
                      };
                      return v2.value1;
                  })());
                  var hi = j > Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(l);
                  var i$prime = (function () {
                      if (low) {
                          return j;
                      };
                      if (hi) {
                          return (j - Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(l) | 0) - 1 | 0;
                      };
                      if (Data_Boolean.otherwise) {
                          return 0;
                      };
                      throw new Error("Failed pattern match at Data.Date (line 101, column 9 - line 103, column 28): " + [  ]);
                  })();
                  var dt$prime = (function () {
                      if (low) {
                          return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Enum.pred(enumDate))(Data_Functor.map(Data_Maybe.functorMaybe)($$Date.create(v2.value0)(v2.value1))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(1)));
                      };
                      if (hi) {
                          return Data_Enum.succ(enumDate)(new $$Date(v2.value0, v2.value1, l));
                      };
                      if (Data_Boolean.otherwise) {
                          return Data_Functor.map(Data_Maybe.functorMaybe)($$Date.create(v2.value0)(v2.value1))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(j));
                      };
                      throw new Error("Failed pattern match at Data.Date (line 104, column 9 - line 106, column 48): " + [  ]);
                  })();
                  return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(adj(i$prime))(dt$prime);
              };
          };
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Int.fromNumber(v))(Data_Function.flip(adj)(date));
      };
  };
  exports["canonicalDate"] = canonicalDate;
  exports["year"] = year;
  exports["month"] = month;
  exports["day"] = day;
  exports["weekday"] = weekday;
  exports["diff"] = diff;
  exports["lastDayOfMonth"] = lastDayOfMonth;
  exports["adjust"] = adjust;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.DateTime"] = $PS["Data.DateTime"] || {};
  var exports = $PS["Data.DateTime"];                                
  var DateTime = (function () {
      function DateTime(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      DateTime.create = function (value0) {
          return function (value1) {
              return new DateTime(value0, value1);
          };
      };
      return DateTime;
  })();
  var date = function (v) {
      return v.value0;
  };
  exports["DateTime"] = DateTime;
  exports["date"] = date;
})(PS);
(function(exports) {
  "use strict";

  exports.toDateTimeImpl = function (ctor) {
    return function (instant) {
      var dt = new Date(instant);
      return ctor (dt.getUTCFullYear())(dt.getUTCMonth() + 1)(dt.getUTCDate())(dt.getUTCHours())(dt.getUTCMinutes())(dt.getUTCSeconds())(dt.getUTCMilliseconds());
    };
  };
})(PS["Data.DateTime.Instant"] = PS["Data.DateTime.Instant"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Time"] = $PS["Data.Time"] || {};
  var exports = $PS["Data.Time"];          
  var Time = (function () {
      function Time(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Time.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Time(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Time;
  })();
  exports["Time"] = Time;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.DateTime.Instant"] = $PS["Data.DateTime.Instant"] || {};
  var exports = $PS["Data.DateTime.Instant"];
  var $foreign = $PS["Data.DateTime.Instant"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Date = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_DateTime = $PS["Data.DateTime"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Time = $PS["Data.Time"];
  var toDateTime = (function () {
      var mkDateTime = function (y) {
          return function (mo) {
              return function (d) {
                  return function (h) {
                      return function (mi) {
                          return function (s) {
                              return function (ms) {
                                  return new Data_DateTime.DateTime(Data_Date.canonicalDate(y)(Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(mo)))(d), new Data_Time.Time(h, mi, s, ms));
                              };
                          };
                      };
                  };
              };
          };
      };
      return $foreign.toDateTimeImpl(mkDateTime);
  })();                                                
  var instant = function (v) {
      if (v >= -8.6399778816e15 && v <= 8.639977881599999e15) {
          return new Data_Maybe.Just(v);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.DateTime.Instant (line 44, column 1 - line 44, column 41): " + [ v.constructor.name ]);
  };
  exports["instant"] = instant;
  exports["toDateTime"] = toDateTime;
})(PS);
(function(exports) {
  "use strict";

  exports.mapWithIndexArray = function (f) {
    return function (xs) {
      var l = xs.length;
      var result = Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(i)(xs[i]);
      }
      return result;
    };
  };
})(PS["Data.FunctorWithIndex"] = PS["Data.FunctorWithIndex"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.FunctorWithIndex"] = $PS["Data.FunctorWithIndex"] || {};
  var exports = $PS["Data.FunctorWithIndex"];
  var $foreign = $PS["Data.FunctorWithIndex"];
  var Data_Functor = $PS["Data.Functor"];          
  var FunctorWithIndex = function (Functor0, mapWithIndex) {
      this.Functor0 = Functor0;
      this.mapWithIndex = mapWithIndex;
  };
  var mapWithIndex = function (dict) {
      return dict.mapWithIndex;
  }; 
  var functorWithIndexArray = new FunctorWithIndex(function () {
      return Data_Functor.functorArray;
  }, $foreign.mapWithIndexArray);
  exports["mapWithIndex"] = mapWithIndex;
  exports["functorWithIndexArray"] = functorWithIndexArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.FoldableWithIndex"] = $PS["Data.FoldableWithIndex"] || {};
  var exports = $PS["Data.FoldableWithIndex"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FunctorWithIndex = $PS["Data.FunctorWithIndex"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var FoldableWithIndex = function (Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
      this.Foldable0 = Foldable0;
      this.foldMapWithIndex = foldMapWithIndex;
      this.foldlWithIndex = foldlWithIndex;
      this.foldrWithIndex = foldrWithIndex;
  };
  var foldrWithIndex = function (dict) {
      return dict.foldrWithIndex;
  };
  var foldlWithIndex = function (dict) {
      return dict.foldlWithIndex;
  };
  var foldMapWithIndexDefaultR = function (dictFoldableWithIndex) {
      return function (dictMonoid) {
          return function (f) {
              return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                  return function (x) {
                      return function (acc) {
                          return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
                      };
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableWithIndexArray = new FoldableWithIndex(function () {
      return Data_Foldable.foldableArray;
  }, function (dictMonoid) {
      return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
  }, function (f) {
      return function (z) {
          var $49 = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (y) {
              return function (v) {
                  return f(v.value0)(y)(v.value1);
              };
          })(z);
          var $50 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create);
          return function ($51) {
              return $49($50($51));
          };
      };
  }, function (f) {
      return function (z) {
          var $52 = Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
              return function (y) {
                  return f(v.value0)(v.value1)(y);
              };
          })(z);
          var $53 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create);
          return function ($54) {
              return $52($53($54));
          };
      };
  });
  exports["foldlWithIndex"] = foldlWithIndex;
  exports["foldableWithIndexArray"] = foldableWithIndexArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];                    
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var listMap = function (f) {
      var chunkedRevMap = function ($copy_chunksAcc) {
          return function ($copy_v) {
              var $tco_var_chunksAcc = $copy_chunksAcc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(chunksAcc, v) {
                  if (v instanceof Cons && (v.value1 instanceof Cons && v.value1.value1 instanceof Cons)) {
                      $tco_var_chunksAcc = new Cons(v, chunksAcc);
                      $copy_v = v.value1.value1.value1;
                      return;
                  };
                  var unrolledMap = function (v1) {
                      if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil)) {
                          return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
                      };
                      if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                          return new Cons(f(v1.value0), Nil.value);
                      };
                      return Nil.value;
                  };
                  var reverseUnrolledMap = function ($copy_v1) {
                      return function ($copy_acc) {
                          var $tco_var_v1 = $copy_v1;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v1, acc) {
                              if (v1 instanceof Cons && (v1.value0 instanceof Cons && (v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons))) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                                  return;
                              };
                              $tco_done = true;
                              return acc;
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
                  $tco_done = true;
                  return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
              };
              return $tco_result;
          };
      };
      return chunkedRevMap(Nil.value);
  };
  var functorList = new Data_Functor.Functor(listMap);                 
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              var $202 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
              return function ($203) {
                  return $202(f($203));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types (line 109, column 12 - line 111, column 30): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
          var $204 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
          return function ($205) {
              return $204(rev($205));
          };
      };
  });
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types (line 155, column 1 - line 157, column 48): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["semigroupList"] = semigroupList;
  exports["foldableList"] = foldableList;
  exports["applicativeList"] = applicativeList;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Map.Internal"] = $PS["Data.Map.Internal"] || {};
  var exports = $PS["Data.Map.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];                  
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var keys = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal (line 606, column 1 - line 606, column 38): " + [ v.constructor.name ]);
  }; 
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 418, column 3 - line 423, column 88): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 415, column 1 - line 415, column 80): " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map.Internal (line 454, column 5 - line 459, column 108): " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 451, column 3 - line 451, column 56): " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 434, column 3 - line 434, column 55): " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var empty = Leaf.value;
  exports["empty"] = empty;
  exports["insert"] = insert;
  exports["keys"] = keys;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Set"] = $PS["Data.Set"] || {};
  var exports = $PS["Data.Set"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Unit = $PS["Data.Unit"];
  var toList = function (v) {
      return Data_Map_Internal.keys(v);
  };
  var insert = function (dictOrd) {
      return function (a) {
          return function (v) {
              return Data_Map_Internal.insert(dictOrd)(a)(Data_Unit.unit)(v);
          };
      };
  };
  var foldableSet = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          var $65 = Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f);
          return function ($66) {
              return $65(toList($66));
          };
      };
  }, function (f) {
      return function (x) {
          var $67 = Data_Foldable.foldl(Data_List_Types.foldableList)(f)(x);
          return function ($68) {
              return $67(toList($68));
          };
      };
  }, function (f) {
      return function (x) {
          var $69 = Data_Foldable.foldr(Data_List_Types.foldableList)(f)(x);
          return function ($70) {
              return $69(toList($70));
          };
      };
  });
  var empty = Data_Map_Internal.empty;
  var fromFoldable = function (dictFoldable) {
      return function (dictOrd) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (a) {
                  return insert(dictOrd)(a)(m);
              };
          })(empty);
      };
  };
  var map = function (dictOrd) {
      return function (f) {
          return Data_Foldable.foldl(foldableSet)(function (m) {
              return function (a) {
                  return insert(dictOrd)(f(a))(m);
              };
          })(empty);
      };
  };
  exports["fromFoldable"] = fromFoldable;
  exports["empty"] = empty;
  exports["map"] = map;
  exports["insert"] = insert;
  exports["foldableSet"] = foldableSet;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var Show = function (show) {
      this.show = show;
  };
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return new Show($foreign.showArrayImpl(show(dictShow)));
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
  exports["showArray"] = showArray;
})(PS);
(function(exports) {
  "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator =
    typeof Symbol !== "undefined" &&
    Symbol != null &&
    typeof Symbol.iterator !== "undefined" &&
    typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt
      ? function (str) { return str.codePointAt(0); }
      : fallback;
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }
      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
  "use strict";

  exports.singleton = function (c) {
    return c;
  };

  exports.length = function (s) {
    return s.length;
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {};
  var exports = $PS["Data.String.CodeUnits"];
  var $foreign = $PS["Data.String.CodeUnits"];
  exports["singleton"] = $foreign.singleton;
  exports["length"] = $foreign.length;
  exports["drop"] = $foreign.drop;
})(PS);
(function(exports) {
  "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.Unsafe"] = $PS["Data.String.Unsafe"] || {};
  var exports = $PS["Data.String.Unsafe"];
  var $foreign = $PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS);
(function(exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Unfoldable1 = function (unfoldr1) {
      this.unfoldr1 = unfoldr1;
  }; 
  var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];  
  var Unfoldable = function (Unfoldable10, unfoldr) {
      this.Unfoldable10 = Unfoldable10;
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  }; 
  var unfoldableArray = new Unfoldable(function () {
      return Data_Unfoldable1.unfoldable1Array;
  }, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.CodePoints"] = $PS["Data.String.CodePoints"] || {};
  var exports = $PS["Data.String.CodePoints"];
  var $foreign = $PS["Data.String.CodePoints"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var unsurrogate = function (lead) {
      return function (trail) {
          return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
  }; 
  var isTrail = function (cu) {
      return 56320 <= cu && cu <= 57343;
  };
  var isLead = function (cu) {
      return 55296 <= cu && cu <= 56319;
  };
  var uncons = function (s) {
      var v = Data_String_CodeUnits.length(s);
      if (v === 0) {
          return Data_Maybe.Nothing.value;
      };
      if (v === 1) {
          return new Data_Maybe.Just({
              head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
              tail: ""
          });
      };
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
          return new Data_Maybe.Just({
              head: unsurrogate(cu0)(cu1),
              tail: Data_String_CodeUnits.drop(2)(s)
          });
      };
      return new Data_Maybe.Just({
          head: cu0,
          tail: Data_String_CodeUnits.drop(1)(s)
      });
  };
  var unconsButWithTuple = function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return new Data_Tuple.Tuple(v.head, v.tail);
      })(uncons(s));
  };
  var toCodePointArrayFallback = function (s) {
      return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function (s) {
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;
      if ($25) {
          var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
          var $26 = isTrail(cu1);
          if ($26) {
              return unsurrogate(cu0)(cu1);
          };
          return cu0;
      };
      return cu0;
  };
  var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);
  var length = function ($52) {
      return Data_Array.length(toCodePointArray($52));
  };
  var fromCharCode = (function () {
      var $53 = Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar));
      return function ($54) {
          return Data_String_CodeUnits.singleton($53($54));
      };
  })();
  var singletonFallback = function (v) {
      if (v <= 65535) {
          return fromCharCode(v);
      };
      var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode(lead) + fromCharCode(trail);
  };                                                                          
  var singleton = $foreign["_singleton"](singletonFallback);
  var takeFallback = function (n) {
      return function (v) {
          if (n < 1) {
              return "";
          };
          var v1 = uncons(v);
          if (v1 instanceof Data_Maybe.Just) {
              return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
          };
          return v;
      };
  };
  var take = $foreign["_take"](takeFallback);
  var drop = function (n) {
      return function (s) {
          return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
      };
  };
  exports["length"] = length;
})(PS);
(function(exports) {
  "use strict";

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];
  var $foreign = $PS["Data.String.Common"];
  exports["split"] = $foreign.split;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Teller.GenTypes"] = $PS["Data.Teller.GenTypes"] || {};
  var exports = $PS["Data.Teller.GenTypes"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show = $PS["Data.Show"];                
  var MonthDayTrendDescription = (function () {
      function MonthDayTrendDescription(value0) {
          this.value0 = value0;
      };
      MonthDayTrendDescription.create = function (value0) {
          return new MonthDayTrendDescription(value0);
      };
      return MonthDayTrendDescription;
  })();
  var LastWeekdayTrendDescription = (function () {
      function LastWeekdayTrendDescription(value0) {
          this.value0 = value0;
      };
      LastWeekdayTrendDescription.create = function (value0) {
          return new LastWeekdayTrendDescription(value0);
      };
      return LastWeekdayTrendDescription;
  })();
  var SpecificWeekdayTrendDescription = (function () {
      function SpecificWeekdayTrendDescription(value0) {
          this.value0 = value0;
      };
      SpecificWeekdayTrendDescription.create = function (value0) {
          return new SpecificWeekdayTrendDescription(value0);
      };
      return SpecificWeekdayTrendDescription;
  })();
  var WeekdayTrendDescription = (function () {
      function WeekdayTrendDescription(value0) {
          this.value0 = value0;
      };
      WeekdayTrendDescription.create = function (value0) {
          return new WeekdayTrendDescription(value0);
      };
      return WeekdayTrendDescription;
  })();
  var EveryWeekdayTrendDescription = (function () {
      function EveryWeekdayTrendDescription(value0) {
          this.value0 = value0;
      };
      EveryWeekdayTrendDescription.create = function (value0) {
          return new EveryWeekdayTrendDescription(value0);
      };
      return EveryWeekdayTrendDescription;
  })();
  var WeekendTrendDescription = (function () {
      function WeekendTrendDescription(value0) {
          this.value0 = value0;
      };
      WeekendTrendDescription.create = function (value0) {
          return new WeekendTrendDescription(value0);
      };
      return WeekendTrendDescription;
  })();
  var HeartbeatMatchResult = function (x) {
      return x;
  };
  var trendDescriptionShow = new Data_Show.Show(function (v) {
      if (v instanceof WeekdayTrendDescription) {
          return "Occurs on these weekdays " + (Data_Show.show(Data_Show.showArray(Data_Show.showInt))(v.value0.weekdays) + (" at price " + Data_Show.show(Data_Show.showArray(Data_Show.showNumber))(v.value0.pricing)));
      };
      if (v instanceof MonthDayTrendDescription) {
          return "Occurs every month on " + (Data_Show.show(Data_Show.showInt)(v.value0.dayOfMonth) + (" at price " + Data_Show.show(Data_Show.showNumber)(v.value0.pricing)));
      };
      if (v instanceof LastWeekdayTrendDescription) {
          return "Occurs on the last " + (Data_Show.show(Data_Show.showInt)(v.value0.weekday) + (" of each month " + (" at price " + Data_Show.show(Data_Show.showNumber)(v.value0.pricing))));
      };
      if (v instanceof SpecificWeekdayTrendDescription) {
          return "Occurs every week on " + (Data_Show.show(Data_Show.showInt)(v.value0.weekday) + (" at price " + Data_Show.show(Data_Show.showNumber)(v.value0.pricing)));
      };
      if (v instanceof EveryWeekdayTrendDescription) {
          return "Occurs on weekdays" + (" at price " + Data_Show.show(Data_Show.showArray(Data_Show.showNumber))(v.value0.pricing));
      };
      if (v instanceof WeekendTrendDescription) {
          return "Occurs on saturdays and sundays" + (" at price " + Data_Show.show(Data_Show.showArray(Data_Show.showNumber))(v.value0.pricing));
      };
      throw new Error("Failed pattern match at Data.Teller.GenTypes (line 77, column 1 - line 83, column 113): " + [ v.constructor.name ]);
  });
  var isWeekendTrendDescription = function (t) {
      if (t instanceof WeekendTrendDescription) {
          return true;
      };
      return false;
  };
  var isWeekdayTrendDescription = function (t) {
      if (t instanceof WeekdayTrendDescription) {
          return true;
      };
      return false;
  };
  var isSpecificWeekdayTrendDescription = function (t) {
      if (t instanceof SpecificWeekdayTrendDescription) {
          return true;
      };
      return false;
  };
  var isMonthDayTrendDescription = function (t) {
      if (t instanceof MonthDayTrendDescription) {
          return true;
      };
      return false;
  };
  var isLastWeekdayTrendDescription = function (t) {
      if (t instanceof LastWeekdayTrendDescription) {
          return true;
      };
      return false;
  };
  var isEveryWeekdayTrendDescription = function (t) {
      if (t instanceof EveryWeekdayTrendDescription) {
          return true;
      };
      return false;
  };
  var heartbeatMatchResultShow = new Data_Show.Show(function (v) {
      return "{ " + (Data_Show.show(trendDescriptionShow)(v.value1) + (" | confidence " + (Data_Show.show(Data_Show.showNumber)(v.value0) + " }")));
  });
  var heartbeatMatchResultNewType = new Data_Newtype.Newtype(function (n) {
      return n;
  }, HeartbeatMatchResult);
  var heartbeatMatchResultEq = new Data_Eq.Eq(function (t1) {
      return function (t2) {
          return Data_Show.show(heartbeatMatchResultShow)(t1) === Data_Show.show(heartbeatMatchResultShow)(t2);
      };
  });
  var heartbeatMatchResultOrd = new Data_Ord.Ord(function () {
      return heartbeatMatchResultEq;
  }, function (v) {
      return function (v1) {
          if (v.value0 > v1.value0) {
              return Data_Ordering.GT.value;
          };
          if (v.value0 < v1.value0) {
              return Data_Ordering.LT.value;
          };
          if (Data_Boolean.otherwise) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Data.Teller.GenTypes (line 102, column 1 - line 108, column 29): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  exports["MonthDayTrendDescription"] = MonthDayTrendDescription;
  exports["LastWeekdayTrendDescription"] = LastWeekdayTrendDescription;
  exports["SpecificWeekdayTrendDescription"] = SpecificWeekdayTrendDescription;
  exports["WeekdayTrendDescription"] = WeekdayTrendDescription;
  exports["EveryWeekdayTrendDescription"] = EveryWeekdayTrendDescription;
  exports["WeekendTrendDescription"] = WeekendTrendDescription;
  exports["isMonthDayTrendDescription"] = isMonthDayTrendDescription;
  exports["isLastWeekdayTrendDescription"] = isLastWeekdayTrendDescription;
  exports["isSpecificWeekdayTrendDescription"] = isSpecificWeekdayTrendDescription;
  exports["isWeekdayTrendDescription"] = isWeekdayTrendDescription;
  exports["isEveryWeekdayTrendDescription"] = isEveryWeekdayTrendDescription;
  exports["isWeekendTrendDescription"] = isWeekendTrendDescription;
  exports["HeartbeatMatchResult"] = HeartbeatMatchResult;
  exports["heartbeatMatchResultNewType"] = heartbeatMatchResultNewType;
  exports["heartbeatMatchResultOrd"] = heartbeatMatchResultOrd;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Teller.HeartbeatGen"] = $PS["Data.Teller.HeartbeatGen"] || {};
  var exports = $PS["Data.Teller.HeartbeatGen"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Date = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Teller_GenTypes = $PS["Data.Teller.GenTypes"];
  var Data_Time_Duration = $PS["Data.Time.Duration"];
  var Data_Tuple = $PS["Data.Tuple"];
  var $$Math = $PS["Math"];                
  var safeAdjust = function (d) {
      return function (dt) {
          var maybeRes = Data_Date.adjust(d)(dt);
          if (maybeRes instanceof Data_Maybe.Just) {
              return maybeRes.value0;
          };
          if (maybeRes instanceof Data_Maybe.Nothing) {
              return dt;
          };
          throw new Error("Failed pattern match at Data.Teller.HeartbeatGen (line 56, column 5 - line 58, column 22): " + [ maybeRes.constructor.name ]);
      };
  };
  var padStringLeftWith = function ($copy_s) {
      return function ($copy_v) {
          return function ($copy_minLeng) {
              var $tco_var_s = $copy_s;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(s, v, minLeng) {
                  if (Data_String_CodePoints.length(s) >= minLeng) {
                      $tco_done = true;
                      return s;
                  };
                  $tco_var_s = v + s;
                  $tco_var_v = v;
                  $copy_minLeng = minLeng;
                  return;
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_s, $tco_var_v, $copy_minLeng);
              };
              return $tco_result;
          };
      };
  };
  var numberToPaddedBinaryString = function (num) {
      return function (length) {
          var asBinary = Data_Int.toStringAs(Data_Int.binary)(num);
          return padStringLeftWith(asBinary)("0")(length);
      };
  };
  var getOccurringWeekdays = function (xs) {
      return Data_FoldableWithIndex.foldlWithIndex(Data_FoldableWithIndex.foldableWithIndexArray)(function (ix) {
          return function (acc) {
              return function (xi) {
                  if (xi === 1) {
                      var v = Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(ix + 1 | 0);
                      if (v instanceof Data_Maybe.Just) {
                          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc)([ v.value0 ]);
                      };
                      if (v instanceof Data_Maybe.Nothing) {
                          return acc;
                      };
                      throw new Error("Failed pattern match at Data.Teller.HeartbeatGen (line 152, column 18 - line 154, column 31): " + [ v.constructor.name ]);
                  };
                  return acc;
              };
          };
      })([  ])(xs);
  };
  var generateHeartbeat = function (dStart) {
      return function (dEnd) {
          return function (genFunc) {
              var dateDelta = Data_Date.diff(Data_Time_Duration.durationDays)(dEnd)(dStart);
              var deltaInt = Data_Int.floor(Data_Newtype.unwrap(Data_Time_Duration.newtypeDays)(dateDelta));
              var dateIndexes = Data_Array.range(0)(deltaInt);
              return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (acc) {
                  return function (dateIndex) {
                      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc)([ genFunc(safeAdjust(Data_Time_Duration.Days(Data_Int.toNumber(dateIndex)))(dStart)) ]);
                  };
              })([  ])(dateIndexes);
          };
      };
  };
  var genXthDayOfMonth = function (x) {
      return function (dt) {
          var xAsDay = Data_Maybe.fromMaybe(Data_Bounded.bottom(Data_Date_Component.boundedDay))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(x));
          var dateDay = Data_Date.day(dt);
          var $10 = Data_Eq.eq(Data_Date_Component.eqDay)(xAsDay)(dateDay);
          if ($10) {
              return 1;
          };
          return 0;
      };
  };
  var genWeekend = function (dt) {
      var wkd = Data_Date.weekday(dt);
      if (wkd instanceof Data_Date_Component.Monday) {
          return 0;
      };
      if (wkd instanceof Data_Date_Component.Tuesday) {
          return 0;
      };
      if (wkd instanceof Data_Date_Component.Wednesday) {
          return 0;
      };
      if (wkd instanceof Data_Date_Component.Thursday) {
          return 0;
      };
      if (wkd instanceof Data_Date_Component.Friday) {
          return 0;
      };
      if (wkd instanceof Data_Date_Component.Saturday) {
          return 1;
      };
      if (wkd instanceof Data_Date_Component.Sunday) {
          return 1;
      };
      throw new Error("Failed pattern match at Data.Teller.HeartbeatGen (line 90, column 5 - line 97, column 20): " + [ wkd.constructor.name ]);
  };
  var genWeekendMatcher = new Data_Tuple.Tuple(genWeekend, new Data_Teller_GenTypes.WeekendTrendDescription({
      pricing: [  ]
  }));
  var genWeekday = function (dt) {
      var wkd = Data_Date.weekday(dt);
      if (wkd instanceof Data_Date_Component.Monday) {
          return 1;
      };
      if (wkd instanceof Data_Date_Component.Tuesday) {
          return 1;
      };
      if (wkd instanceof Data_Date_Component.Wednesday) {
          return 1;
      };
      if (wkd instanceof Data_Date_Component.Thursday) {
          return 1;
      };
      if (wkd instanceof Data_Date_Component.Friday) {
          return 1;
      };
      if (wkd instanceof Data_Date_Component.Saturday) {
          return 0;
      };
      if (wkd instanceof Data_Date_Component.Sunday) {
          return 0;
      };
      throw new Error("Failed pattern match at Data.Teller.HeartbeatGen (line 77, column 5 - line 84, column 20): " + [ wkd.constructor.name ]);
  };
  var genWeekdaysMatcher = new Data_Tuple.Tuple(genWeekday, new Data_Teller_GenTypes.EveryWeekdayTrendDescription({
      pricing: [  ]
  }));
  var genLastWeekDay = function (w) {
      return function (dt) {
          var lastDateOfMonth = Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.lastDayOfMonth(Data_Date.year(dt))(Data_Date.month(dt)));
          var isSameDay = Data_Eq.eq(Data_Date_Component.eqWeekday)(Data_Date.weekday(dt))(w);
          var dayOfMonth = Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(dt));
          var daysUntilEndOfMonth = lastDateOfMonth - dayOfMonth | 0;
          var $14 = isSameDay && daysUntilEndOfMonth < 7;
          if ($14) {
              return 1;
          };
          return 0;
      };
  };
  var genLastFridayOfMonthMatcher = new Data_Tuple.Tuple(genLastWeekDay(Data_Date_Component.Friday.value), new Data_Teller_GenTypes.LastWeekdayTrendDescription({
      weekday: Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday)(Data_Date_Component.Friday.value),
      pricing: 0.0
  }));
  var createMonthlyMatchers = Data_Functor.map(Data_Functor.functorArray)(function (i) {
      return new Data_Tuple.Tuple(genXthDayOfMonth(i), new Data_Teller_GenTypes.MonthDayTrendDescription({
          dayOfMonth: i,
          pricing: 0.0
      }));
  })(Data_Array.range(1)(31));
  var binaryWeekPatternToMatcher = function (xs) {
      return function (dt) {
          var wkd = Data_Date.weekday(dt);
          var wkdIndex = Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday)(wkd) - 1 | 0;
          var shouldOccur = Data_Array.index(xs)(wkdIndex);
          if (shouldOccur instanceof Data_Maybe.Just) {
              return shouldOccur.value0;
          };
          if (shouldOccur instanceof Data_Maybe.Nothing) {
              return 0;
          };
          throw new Error("Failed pattern match at Data.Teller.HeartbeatGen (line 140, column 5 - line 142, column 21): " + [ shouldOccur.constructor.name ]);
      };
  };
  var binParseInt = function (s) {
      if (s === "0") {
          return 0;
      };
      if (s === "1") {
          return 1;
      };
      return 0;
  };
  var binaryStringToInts = function (s) {
      var splitString = Data_String_Common.split("")(s);
      return Data_Functor.map(Data_Functor.functorArray)(binParseInt)(splitString);
  };
  var createAllBinaryPermutationsOfLength = function (i) {
      var binMax = Data_Int.floor($$Math.pow(2.0)(Data_Int.toNumber(i)) - 1.0);
      var numList = Data_Array.range(1)(binMax);
      var binaryStrings = Data_Functor.map(Data_Functor.functorArray)(function (xi) {
          return numberToPaddedBinaryString(xi)(i);
      })(numList);
      return Data_Functor.map(Data_Functor.functorArray)(binaryStringToInts)(binaryStrings);
  };
  var createWeekdayMatchers = (function () {
      var binarySequences = createAllBinaryPermutationsOfLength(7);
      return Data_Functor.map(Data_Functor.functorArray)(function (binSeq) {
          return new Data_Tuple.Tuple(binaryWeekPatternToMatcher(binSeq), new Data_Teller_GenTypes.WeekdayTrendDescription({
              weekdays: Data_Functor.map(Data_Functor.functorArray)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday))(getOccurringWeekdays(binSeq)),
              pricing: [  ]
          }));
      })(binarySequences);
  })();
  var allHeartbeatMatchers = Data_Semigroup.append(Data_Semigroup.semigroupArray)(createMonthlyMatchers)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(createWeekdayMatchers)([ genLastFridayOfMonthMatcher, genWeekdaysMatcher, genWeekendMatcher ]));
  exports["generateHeartbeat"] = generateHeartbeat;
  exports["allHeartbeatMatchers"] = allHeartbeatMatchers;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.Teller.SignalProcessing"] = $PS["Data.Teller.SignalProcessing"] || {};
  var exports = $PS["Data.Teller.SignalProcessing"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Set = $PS["Data.Set"];
  var Data_Tuple = $PS["Data.Tuple"];
  var $$Math = $PS["Math"];
  var varianceProduct = function (yi) {
      return function (yj) {
          return function (yMean) {
              return (yi - yMean) * (yj - yMean);
          };
      };
  };
  var unPair = function (xs) {
      return Data_Functor.map(Data_Functor.functorArray)(function (v) {
          return Data_Tuple.snd(v);
      })(xs);
  };
  var stdDev = function (v) {
      return function (mean) {
          if (v.length === 0) {
              return 0.0;
          };
          var minusMeans = Data_Functor.map(Data_Functor.functorArray)(function (xi) {
              return (xi - mean) * (xi - mean);
          })(v);
          var minusMeanSum = Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringNumber)(minusMeans);
          return minusMeanSum / Data_Int.toNumber(Data_Array.length(v));
      };
  }; 
  var seriesMean = function (xs) {
      var seriesSum = Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringNumber)(xs);
      var seriesLen = Data_Int.toNumber(Data_Array.length(xs));
      return seriesSum / seriesLen;
  };
  var removeSmallPeaks = function (xs) {
      return function (h) {
          return function (m) {
              return function (sd) {
                  return Data_Array.filter(function (v) {
                      return Data_Tuple.snd(v) - m > h * sd;
                  })(xs);
              };
          };
      };
  };
  var pairWithIndex = function (xs) {
      return Data_Array.mapWithIndex(function (i) {
          return function (xi) {
              return new Data_Tuple.Tuple(i, xi);
          };
      })(xs);
  };

  // Peak Detection
  var max$prime = function (dictOrd) {
      return function (xs) {
          return Data_Array.last(Data_Array.sort(dictOrd)(xs));
      };
  };
  var peakFunction = function (windowSize) {
      return function (h) {
          return function (i) {
              return function (xi) {
                  return function (xs) {
                      var forwardValues = Data_Array.slice(i + 1 | 0)((i + windowSize | 0) + 1 | 0)(xs);
                      var forwardMinusXi = Data_Functor.map(Data_Functor.functorArray)(function (b) {
                          return xi - b;
                      })(forwardValues);
                      var forwardMax = Data_Maybe.fromMaybe(0.0)(max$prime(Data_Ord.ordNumber)(forwardMinusXi));
                      var backwardValues = Data_Array.slice(i - windowSize | 0)(i)(xs);
                      var backMinusXi = Data_Functor.map(Data_Functor.functorArray)(function (b) {
                          return xi - b;
                      })(backwardValues);
                      var backMax = Data_Maybe.fromMaybe(0.0)(max$prime(Data_Ord.ordNumber)(backMinusXi));
                      return (backMax + forwardMax) / 2.0;
                  };
              };
          };
      };
  };
  var invertValue = function (v) {
      if (v === 0.0) {
          return 1.0;
      };
      return 1.0 / v;
  };
  var indexedTupleEq = new Data_Eq.Eq(function (v) {
      return function (v1) {
          return Data_Tuple.snd(v) === Data_Tuple.snd(v1);
      };
  });
  var indexedTupleOrd = new Data_Ord.Ord(function () {
      return indexedTupleEq;
  }, function (v) {
      return function (v1) {
          if (Data_Tuple.snd(v) > Data_Tuple.snd(v1)) {
              return Data_Ordering.GT.value;
          };
          if (Data_Tuple.snd(v) < Data_Tuple.snd(v1)) {
              return Data_Ordering.LT.value;
          };
          if (Data_Boolean.otherwise) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Data.Teller.SignalProcessing (line 20, column 1 - line 24, column 25): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var e = 2.718;
  var weightFunction = function (wDelta) {
      return function (n) {
          return function (wMin) {
              return function (x) {
                  var linearTerm = (wDelta / n) * x + wMin;
                  var expTerm = $$Math.pow(e)(x - n);
                  return linearTerm + expTerm;
              };
          };
      };
  };
  var hammingDistanceWeighted = function (xs) {
      return function (ys) {
          var arrLen = Data_Int.toNumber(Data_Array.length(xs));
          var weightFn = weightFunction(0.25)(arrLen)(1.0);
          return Data_FoldableWithIndex.foldlWithIndex(Data_FoldableWithIndex.foldableWithIndexArray)(function (i) {
              return function (acc) {
                  return function (v) {
                      var $80 = v.value0 !== v.value1;
                      if ($80) {
                          return acc + 1.0 * weightFn(Data_Int.toNumber(i));
                      };
                      return acc;
                  };
              };
          })(0.0)(Data_Array.zip(xs)(ys));
      };
  };
  var diffChunks = function (xs) {
      var safeTail = function (a) {
          return Data_Maybe.fromMaybe(0.0)(Data_Array.last(a));
      };
      var safeHead = function (a) {
          return Data_Maybe.fromMaybe(0.0)(Data_Array.head(a));
      };
      return Data_Functor.map(Data_Functor.functorArray)(function (arr) {
          return Data_Ord.abs(Data_Ord.ordNumber)(Data_Ring.ringNumber)(safeHead(arr) - safeTail(arr));
      })(xs);
  };
  var chunkConsec = function (xs) {
      var safePair = function (ix) {
          return function (val) {
              var v = Data_Array.index(xs)(ix + 1 | 0);
              if (v instanceof Data_Maybe.Just) {
                  return [ [ val, v.value0 ] ];
              };
              if (v instanceof Data_Maybe.Nothing) {
                  return [  ];
              };
              throw new Error("Failed pattern match at Data.Teller.SignalProcessing (line 134, column 13 - line 136, column 30): " + [ v.constructor.name ]);
          };
      };
      return Data_FoldableWithIndex.foldlWithIndex(Data_FoldableWithIndex.foldableWithIndexArray)(function (i) {
          return function (acc) {
              return function (xi) {
                  return Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc)(safePair(i)(xi));
              };
          };
      })([  ])(xs);
  };
  var checkPair = function (v) {
      return function (v1) {
          return function (v2) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return [ v ];
              };
              if (v1 instanceof Data_Maybe.Just) {
                  var violatesWindow = (Data_Tuple.fst(v1.value0) - Data_Tuple.fst(v) | 0) <= v2;
                  var reWrapped = [ v, v1.value0 ];
                  if (violatesWindow) {
                      var v3 = max$prime(indexedTupleOrd)(reWrapped);
                      if (v3 instanceof Data_Maybe.Nothing) {
                          return [  ];
                      };
                      if (v3 instanceof Data_Maybe.Just) {
                          return [ v3.value0 ];
                      };
                      throw new Error("Failed pattern match at Data.Teller.SignalProcessing (line 85, column 14 - line 87, column 26): " + [ v3.constructor.name ]);
                  };
                  return reWrapped;
              };
              throw new Error("Failed pattern match at Data.Teller.SignalProcessing (line 81, column 1 - line 81, column 77): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var clampToWindow = function (xs) {
      return function (windowSize) {
          var reducer = function (ix) {
              return function (arr) {
                  return function (v) {
                      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(arr)(checkPair(v)(Data_Array.index(xs)(ix + 1 | 0))(windowSize));
                  };
              };
          };
          return Data_FoldableWithIndex.foldlWithIndex(Data_FoldableWithIndex.foldableWithIndexArray)(reducer)([  ])(xs);
      };
  };
  var findPeaks = function (xs) {
      return function (windowSize) {
          return function (h) {
              var peakFnValues = Data_Array.mapWithIndex(function (ix) {
                  return function (val) {
                      return peakFunction(windowSize)(h)(ix)(val)(xs);
                  };
              })(xs);
              var pairedFnValues = pairWithIndex(peakFnValues);
              var positivePeakFnValues = Data_Array.filter(function (v) {
                  return Data_Tuple.snd(v) > 0.0;
              })(pairedFnValues);
              var meanPeakFnValues = seriesMean(unPair(positivePeakFnValues));
              var stdDevPeakFnValues = stdDev(unPair(positivePeakFnValues))(meanPeakFnValues);
              var largePeaks = removeSmallPeaks(positivePeakFnValues)(h)(meanPeakFnValues)(stdDevPeakFnValues);
              var clampedPeaks = clampToWindow(largePeaks)(windowSize);
              return Data_Array.fromFoldable(Data_Set.foldableSet)(Data_Set.map(Data_Ord.ordInt)(function (v) {
                  return Data_Tuple.fst(v);
              })(Data_Set.fromFoldable(Data_Foldable.foldableArray)(indexedTupleOrd)(clampedPeaks)));
          };
      };
  };
  var averageDistance = function (xs) {
      var chunked = chunkConsec(xs);
      var diffs = diffChunks(chunked);
      return seriesMean(diffs);
  };

  // Correlation
  var atIndex = function (xs) {
      return function (n) {
          var wrappedIndex = Data_Array.index(xs)(n);
          if (wrappedIndex instanceof Data_Maybe.Just) {
              return wrappedIndex.value0;
          };
          if (wrappedIndex instanceof Data_Maybe.Nothing) {
              return 0.0;
          };
          throw new Error("Failed pattern match at Data.Teller.SignalProcessing (line 30, column 5 - line 32, column 23): " + [ wrappedIndex.constructor.name ]);
      };
  };
  var seriesVariances = function (k) {
      return function (mean) {
          return function (xs) {
              var arrValAt = atIndex(xs);
              var arrLen = Data_Array.length(xs);
              var remainderSeries = Data_Array.slice(0)(arrLen - k | 0)(xs);
              return Data_Array.mapWithIndex(function (i) {
                  return function (yi) {
                      return varianceProduct(yi)(arrValAt(i + k | 0))(mean);
                  };
              })(remainderSeries);
          };
      };
  };
  var autoCoVarianceAtK = function (k) {
      return function (mean) {
          return function (xs) {
              var variances = seriesVariances(k)(mean)(xs);
              return Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringNumber)(variances) / Data_Int.toNumber(Data_Array.length(xs));
          };
      };
  };
  var autoCorrelationAtLagK = function (k) {
      return function (xs) {
          var xsMean = seriesMean(xs);
          var coVarianceAtZero = autoCoVarianceAtK(0)(xsMean)(xs);
          var coVarianceAtK = autoCoVarianceAtK(k)(xsMean)(xs);
          return coVarianceAtK / coVarianceAtZero;
      };
  };
  var autoCorrelation = function (xs) {
      return Data_Array.mapWithIndex(function (i) {
          return function (v) {
              return autoCorrelationAtLagK(i)(xs);
          };
      })(xs);
  };
  var estimatePeriod = function (xs) {
      var ac = autoCorrelation(Data_Functor.map(Data_Functor.functorArray)(Data_Int.toNumber)(xs));
      var peaks = findPeaks(ac)(1)(1.0);
      return averageDistance(Data_Functor.map(Data_Functor.functorArray)(Data_Int.toNumber)(peaks));
  };
  exports["chunkConsec"] = chunkConsec;
  exports["estimatePeriod"] = estimatePeriod;
  exports["hammingDistanceWeighted"] = hammingDistanceWeighted;
  exports["invertValue"] = invertValue;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Teller.Transaction"] = $PS["Data.Teller.Transaction"] || {};
  var exports = $PS["Data.Teller.Transaction"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Date = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_DateTime = $PS["Data.DateTime"];
  var Data_DateTime_Instant = $PS["Data.DateTime.Instant"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Set = $PS["Data.Set"];
  var Data_Teller_SignalProcessing = $PS["Data.Teller.SignalProcessing"];
  var Data_Time_Duration = $PS["Data.Time.Duration"];
  var uniqueMerchants = function (xs) {
      return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (accSet) {
          return function (v) {
              return Data_Set.insert(Data_Ord.ordString)(v.merchantName)(accSet);
          };
      })(Data_Set.empty)(xs);
  }; 
  var transactionEq = new Data_Eq.Eq(function (v) {
      return function (v1) {
          var merchantNameMatch = v.merchantName === v1.merchantName;
          var dateMatch = v.timestamp === v1.timestamp;
          var amountMatch = v.amount === v1.amount;
          return dateMatch && (amountMatch && merchantNameMatch);
      };
  });
  var transactionOrd = new Data_Ord.Ord(function () {
      return transactionEq;
  }, function (v) {
      return function (v1) {
          if (v.timestamp > v1.timestamp) {
              return Data_Ordering.GT.value;
          };
          if (v.timestamp < v1.timestamp) {
              return Data_Ordering.LT.value;
          };
          if (Data_Boolean.otherwise) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Data.Teller.Transaction (line 52, column 1 - line 58, column 29): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var transactionDate = function (v) {
      var msDuration = Data_Time_Duration.Milliseconds(v.timestamp);
      var tInstant = Data_DateTime_Instant.instant(msDuration);
      if (tInstant instanceof Data_Maybe.Just) {
          return Data_Maybe.Just.create(Data_DateTime.date(Data_DateTime_Instant.toDateTime(tInstant.value0)));
      };
      if (tInstant instanceof Data_Maybe.Nothing) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Teller.Transaction (line 110, column 5 - line 112, column 27): " + [ tInstant.constructor.name ]);
  };
  var matchMerchant = function (m) {
      return function (v) {
          return v.merchantName === m;
      };
  };
  var transactionsForMerchant = function (xs) {
      return function (m) {
          return Data_Array.filter(matchMerchant(m))(xs);
      };
  };
  var getTransactionsForWeekDay = function (xs) {
      return function (w) {
          return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (acc) {
              return function (t) {
                  var v = transactionDate(t);
                  if (v instanceof Data_Maybe.Just) {
                      var $42 = Data_Eq.eq(Data_Date_Component.eqWeekday)(Data_Date.weekday(v.value0))(w);
                      if ($42) {
                          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc)([ t ]);
                      };
                      return acc;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      return acc;
                  };
                  throw new Error("Failed pattern match at Data.Teller.Transaction (line 120, column 13 - line 125, column 31): " + [ v.constructor.name ]);
              };
          })([  ])(xs);
      };
  };
  var getHeartbeatChunk = function (xs) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.head(xs))(function (ts) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.last(xs))(function (te) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(transactionDate(ts))(function (startDate) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(transactionDate(te))(function (endDate) {
                      return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Date.diff(Data_Time_Duration.durationDays)(endDate)(startDate)))(function (v) {
                          return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Int.floor(Data_Newtype.unwrap(Data_Time_Duration.newtypeDays)(v))))(function (dayCount) {
                              var $54 = dayCount >= 2;
                              if ($54) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Array.range(1)(dayCount - 1 | 0)))(function (dayRange) {
                                      return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Functor.map(Data_Functor.functorArray)(function (v1) {
                                          return 0;
                                      })(dayRange)))(function (gapZeroes) {
                                          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ 1 ])(gapZeroes));
                                      });
                                  });
                              };
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)([ 1 ]);
                          });
                      });
                  });
              });
          });
      });
  };
  var getBinaryHeartbeat = function (v) {
      if (v.length === 0) {
          return [  ];
      };
      if (v.length === 1) {
          return [ 1 ];
      };
      var makeChunk = function (acc) {
          return function (chunk) {
              var chunkRes = Data_Maybe.fromMaybe([  ])(getHeartbeatChunk(chunk));
              return Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc)(chunkRes);
          };
      };
      var chunked = Data_Teller_SignalProcessing.chunkConsec(v);
      var heartbeatsToLast = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (a) {
          return function (t) {
              return makeChunk(a)(t);
          };
      })([  ])(chunked);
      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(heartbeatsToLast)([ 1 ]);
  };
  exports["transactionsForMerchant"] = transactionsForMerchant;
  exports["uniqueMerchants"] = uniqueMerchants;
  exports["transactionDate"] = transactionDate;
  exports["getTransactionsForWeekDay"] = getTransactionsForWeekDay;
  exports["getBinaryHeartbeat"] = getBinaryHeartbeat;
  exports["transactionOrd"] = transactionOrd;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Teller.Price"] = $PS["Data.Teller.Price"] || {};
  var exports = $PS["Data.Teller.Price"];
  var Data_Array = $PS["Data.Array"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Teller_GenTypes = $PS["Data.Teller.GenTypes"];
  var Data_Teller_Transaction = $PS["Data.Teller.Transaction"];                
  var intArrayToWeekdayArray = function (ints) {
      return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (acc) {
          return function (i) {
              return Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc)([ Data_Enum.toEnumWithDefaults(Data_Date_Component.boundedEnumWeekday)(Data_Date_Component.Monday.value)(Data_Date_Component.Sunday.value)(i) ]);
          };
      })([  ])(ints);
  };
  var getLastAmount = function (xs) {
      var v = Data_Array.last(xs);
      if (v instanceof Data_Maybe.Just) {
          return v.value0.amount;
      };
      if (v instanceof Data_Maybe.Nothing) {
          return 0.0;
      };
      throw new Error("Failed pattern match at Data.Teller.Price (line 33, column 5 - line 35, column 23): " + [ v.constructor.name ]);
  };
  var getPricingForWeekdays = function (xs) {
      return function (tx) {
          return Data_Functor.map(Data_Functor.functorArray)(function (w) {
              return getLastAmount(Data_Teller_Transaction.getTransactionsForWeekDay(tx)(w));
          })(xs);
      };
  };
  var addPricingToTrend = function (tx) {
      return function (v) {
          if (v instanceof Data_Teller_GenTypes.MonthDayTrendDescription) {
              return Data_Teller_GenTypes.MonthDayTrendDescription.create({
                  dayOfMonth: v.value0.dayOfMonth,
                  pricing: getLastAmount(tx)
              });
          };
          if (v instanceof Data_Teller_GenTypes.LastWeekdayTrendDescription) {
              return Data_Teller_GenTypes.LastWeekdayTrendDescription.create({
                  weekday: v.value0.weekday,
                  pricing: getLastAmount(tx)
              });
          };
          if (v instanceof Data_Teller_GenTypes.SpecificWeekdayTrendDescription) {
              return Data_Teller_GenTypes.SpecificWeekdayTrendDescription.create({
                  weekday: v.value0.weekday,
                  pricing: getLastAmount(tx)
              });
          };
          if (v instanceof Data_Teller_GenTypes.WeekdayTrendDescription) {
              return Data_Teller_GenTypes.WeekdayTrendDescription.create({
                  weekdays: v.value0.weekdays,
                  pricing: getPricingForWeekdays(intArrayToWeekdayArray(v.value0.weekdays))(tx)
              });
          };
          if (v instanceof Data_Teller_GenTypes.EveryWeekdayTrendDescription) {
              return Data_Teller_GenTypes.EveryWeekdayTrendDescription.create({
                  pricing: getPricingForWeekdays([ Data_Date_Component.Monday.value, Data_Date_Component.Tuesday.value, Data_Date_Component.Wednesday.value, Data_Date_Component.Thursday.value, Data_Date_Component.Friday.value ])(tx)
              });
          };
          if (v instanceof Data_Teller_GenTypes.WeekendTrendDescription) {
              return Data_Teller_GenTypes.WeekendTrendDescription.create({
                  pricing: getPricingForWeekdays([ Data_Date_Component.Saturday.value, Data_Date_Component.Sunday.value ])(tx)
              });
          };
          throw new Error("Failed pattern match at Data.Teller.Price (line 13, column 1 - line 13, column 82): " + [ tx.constructor.name, v.constructor.name ]);
      };
  };
  exports["addPricingToTrend"] = addPricingToTrend;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Teller.Trend"] = $PS["Data.Teller.Trend"] || {};
  var exports = $PS["Data.Teller.Trend"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Set = $PS["Data.Set"];
  var Data_Teller_GenTypes = $PS["Data.Teller.GenTypes"];
  var Data_Teller_HeartbeatGen = $PS["Data.Teller.HeartbeatGen"];
  var Data_Teller_Price = $PS["Data.Teller.Price"];
  var Data_Teller_SignalProcessing = $PS["Data.Teller.SignalProcessing"];
  var Data_Teller_Transaction = $PS["Data.Teller.Transaction"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var matchAgainstHeartbeat = function (dStart) {
      return function (dEnd) {
          return function (hb) {
              return function (v) {
                  var generatedHb = Data_Teller_HeartbeatGen.generateHeartbeat(dStart)(dEnd)(v.value0);
                  var signalMatch = Data_Teller_SignalProcessing.invertValue(Data_Teller_SignalProcessing.hammingDistanceWeighted(generatedHb)(hb));
                  return Data_Teller_GenTypes.HeartbeatMatchResult(new Data_Tuple.Tuple(signalMatch, v.value1));
              };
          };
      };
  };
  var getMatcherResults = function (v) {
      if (v.length === 0) {
          return [  ];
      };
      if (v.length === 1) {
          return [  ];
      };
      var hb = Data_Teller_Transaction.getBinaryHeartbeat(v);
      var dates = Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.head(v))(function (startTrans) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.last(v))(function (endTrans) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Teller_Transaction.transactionDate(startTrans))(function (startDate) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Teller_Transaction.transactionDate(endTrans))(function (endDate) {
                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(startDate, endDate));
                  });
              });
          });
      });
      if (dates instanceof Data_Maybe.Just) {
          return Data_Functor.map(Data_Functor.functorArray)(function (matcher) {
              return matchAgainstHeartbeat(dates.value0.value0)(dates.value0.value1)(hb)(matcher);
          })(Data_Teller_HeartbeatGen.allHeartbeatMatchers);
      };
      if (dates instanceof Data_Maybe.Nothing) {
          return [  ];
      };
      throw new Error("Failed pattern match at Data.Teller.Trend (line 62, column 5 - line 65, column 22): " + [ dates.constructor.name ]);
  };
  var identifyTrend = function (m) {
      return function (xs) {
          var heartbeat = Data_Teller_Transaction.getBinaryHeartbeat(xs);
          var period = Data_Teller_SignalProcessing.estimatePeriod(heartbeat);
          var $15 = period < 32.0;
          if ($15) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Array.reverse(Data_Array.sort(Data_Teller_GenTypes.heartbeatMatchResultOrd)(getMatcherResults(xs)))))(function (matchers) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Foldable.maximum(Data_Teller_GenTypes.heartbeatMatchResultOrd)(Data_Foldable.foldableArray)(matchers))(function (maxMatch) {
                      return Control_Bind.bind(Data_Maybe.bindMaybe)(new Data_Maybe.Just(Data_Tuple.snd(Data_Newtype.unwrap(Data_Teller_GenTypes.heartbeatMatchResultNewType)(maxMatch))))(function (winningTrend) {
                          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Teller_Price.addPricingToTrend(xs)(winningTrend));
                      });
                  });
              });
          };
          return Data_Maybe.Nothing.value;
      };
  };
  var identifyTrends = function (xs) {
      var sortedTransactions = Data_Array.sort(Data_Teller_Transaction.transactionOrd)(xs);
      var merchants = Data_Array.fromFoldable(Data_Set.foldableSet)(Data_Teller_Transaction.uniqueMerchants(sortedTransactions));
      return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (acc) {
          return function (merchant) {
              var v = identifyTrend(merchant)(Data_Teller_Transaction.transactionsForMerchant(sortedTransactions)(merchant));
              if (v instanceof Data_Maybe.Just) {
                  return Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc)([ new Data_Tuple.Tuple(merchant, v.value0) ]);
              };
              if (v instanceof Data_Maybe.Nothing) {
                  return acc;
              };
              throw new Error("Failed pattern match at Data.Teller.Trend (line 41, column 9 - line 45, column 27): " + [ v.constructor.name ]);
          };
      })([  ])(merchants);
  };
  exports["identifyTrends"] = identifyTrends;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Teller"] = $PS["Data.Teller"] || {};
  var exports = $PS["Data.Teller"];
  var Data_Teller_GenTypes = $PS["Data.Teller.GenTypes"];
  var Data_Teller_Trend = $PS["Data.Teller.Trend"];                
  var isWeekendTrendDescription = Data_Teller_GenTypes.isWeekendTrendDescription;
  var isWeekdayTrendDescription = Data_Teller_GenTypes.isWeekdayTrendDescription;
  var isSpecificWeekdayTrendDescription = Data_Teller_GenTypes.isSpecificWeekdayTrendDescription;
  var isMonthDayTrendDescription = Data_Teller_GenTypes.isMonthDayTrendDescription;
  var isLastWeekdayTrendDescription = Data_Teller_GenTypes.isLastWeekdayTrendDescription;
  var isEveryWeekdayTrendDescription = Data_Teller_GenTypes.isEveryWeekdayTrendDescription;
  var identifyTrends = Data_Teller_Trend.identifyTrends;
  exports["identifyTrends"] = identifyTrends;
  exports["isMonthDayTrendDescription"] = isMonthDayTrendDescription;
  exports["isLastWeekdayTrendDescription"] = isLastWeekdayTrendDescription;
  exports["isSpecificWeekdayTrendDescription"] = isSpecificWeekdayTrendDescription;
  exports["isWeekdayTrendDescription"] = isWeekdayTrendDescription;
  exports["isEveryWeekdayTrendDescription"] = isEveryWeekdayTrendDescription;
  exports["isWeekendTrendDescription"] = isWeekendTrendDescription;
})(PS);
//# sourceMappingURL=index.js.map

module.exports = PS["Data.Teller"];
